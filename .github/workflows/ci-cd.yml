name: Fintech CI/CD Pipeline

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install client dependencies
        run: |
          cd client
          npm install

      - name: Install server dependencies
        run: |
          cd server
          npm install

      - name: Build client
        run: |
          cd client
          npm run build

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run client tests
        run: |
          cd client
          npm run test -- --coverage

      - name: Run server tests
        run: |
          cd server
          npm run test -- --coverage

  deploy:
    needs: test
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ AKIAQ3EGQHG2DBRXFNHB }}
          aws-secret-access-key: ${{ 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}}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 058264140212.dkr.ecr.ap-south-1.amazonaws.com

      - name: Build Docker Image
        run: |
          cd server
          docker build -t 058264140212.dkr.ecr.ap-south-1.amazonaws.com/backend .

      - name: Push Docker Image to Amazon ECR
        run: |
          docker push 058264140212.dkr.ecr.ap-south-1.amazonaws.com/frontend

      - name: Update ECS Task Definition
        run: |
          TASK_DEF=$(aws ecs describe-task-definition --task-definition fintech-task --query taskDefinition)
          NEW_TASK_DEF=$(echo "$TASK_DEF" | jq --arg IMAGE "058264140212.dkr.ecr.ap-south-1.amazonaws.com/backend" '.containerDefinitions[0].image = $IMAGE')
          echo "$NEW_TASK_DEF" > new-task-def.json
          aws ecs register-task-definition --cli-input-json file://new-task-def.json

      - name: Deploy to AWS Fargate
        run: |
          aws ecs update-service --cluster fintech-cluster --service fintech-service --force-new-deployment

  rollback:
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Trigger rollback
        run: bash ci-cd/rollback.sh
